type state = s32

// Computes the theta value of the sketch
sketch-estimate: func(data: list<u8>) -> float64

// Returns string representation of the state.
sketch-to-string: func(data: list<u8>) -> string

// Initializes a new aggregate sketch state
sketch-agg-init-handle: func() -> state

// Merges a second sketch using UNION
sketch-agg-update-handle: func(state: state, input: list<u8>) -> state

// Merges two compact sketches
sketch-agg-merge-handle: func(left: state, right: state) -> state

// Serializes the merged sketches
sketch-agg-serialize-handle: func(state: state) -> list<u8>

// Deserializes the compact sketch
sketch-agg-deserialize-handle: func(data: list<u8>) -> state

